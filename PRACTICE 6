Bai 1:
with job1 AS(
  select job_id, company_id, title, description
  from job_listings
)
select 
COUNT(job.job_id)/2 as duplicate_companies
from job_listings as job
join job1
on job.company_id = job1.company_id and job.title=job1.title and job.description=job1.description and job.job_id != job1.job_id
Bai 2:
with t_b1 as (
  SELECT
  category,
  product, 
  sum(spend) as total_spend,
  rank() over (partition by category order by sum(spend) desc) as rank
  from product_spend
  where extract(year from transaction_date) = 2022
  group by 1, 2
)
select 
category,
product,
total_spend
from t_b1
where rank < 3
order by category, rank;
Bai 3:
select
count(n_t.policy_holder_id) as member_count
from(
select 
policy_holder_id, count(call_category)
from callers
group by policy_holder_id
having count(call_category) >= 3
) as n_t
Bai 4:
SELECT page_id
FROM pages
WHERE page_id NOT IN (
  SELECT page_id
  FROM page_likes
  WHERE page_id IS NOT NULL
);
Bai 5:
with n_t as (
select 
user_id
from user_actions
where extract (month from event_date) in ('7', '6') and
EXTRACT(year from event_date) = 2022 
--and envent_type in ('sign-in', 'like', 'comment')
group by user_id
) 
SELECT
7 as month,
count(distinct user_id) as monthly_active_users
from n_t
Bai 6: 
select
DATE_FORMAT(trans_date, ‘%Y-%m’) as month, country,
count (*) as trans_count,
sum((case when state  = ‘approved’ then 1 else 0 end)) as approved_count,
sum(amount) as trans_total_amount,
sum((case when state = ‘approved’ then amount else 0 end) as approved_total_amount
from Transactions
group by DATE_FORMAT(trans_date, ‘%Y-%m’) as month, country

Bai 7:
SELECT product_id, year as first_year, quantity,price
FROM Sales
WHERE (product_id,year) in (
SELECT product_id,MIN(year)
FROM Sales
GROUP BY product_id
)
Bai 8:
SELECT c.customer_id FROM Customer c
GROUP BY
c.customer_id
HAVING
count(DISTINCT product_key) = (SELECT count(*) FROM Product);
Bai 9:
SELECT employee_id
FROM Employees as a
WHERE manager_id not in (SELECT employee_id FROM employees) and salary < 30000
ORDER BY employee_id ASC

Bai 10:
with job1 AS(
  select job_id, company_id, title, description
  from job_listings
)
select 
COUNT(job.job_id)/2 as duplicate_companies
from job_listings as job
join job1
on job.company_id = job1.company_id and job.title=job1.title and job.description=job1.description and job.job_id != job1.job_id 
Bai 11:
with n_t1 as(
select
user_id as ui, name, count(rating)
from Users
right join MovieRating as Mo
on Users.ui = Mo.user_id
group by 1
order by 1 asc, count(rating) desc
limit1),
n_t2 as(
select
movie_id, title, average(rating)
from Movies
right join MovieRating as Mo
on Movies.movie_id = Mo.movie_id
group by 1
where extract (month from Mo.created_at) = 2 and extract (month from Mo.created_at) =2020
order by 3
limit 1)
select (*)
from (select name from n_t1 union all select title from n_t2 ) as results
Bai 12:
with n_t1 as(
select
requester_id as id
from RequestAccepted
),
n_t2 as(
select
accepter_id as id
from RequestAccepted)
select
id, count(*) as num
from (select 
id from n_t1 union all select id from n_t2 ) as new_table
group by 1
order by 2
limit 1
